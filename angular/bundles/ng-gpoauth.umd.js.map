{"version":3,"file":"ng-gpoauth.umd.js.map","sources":["ng://ng-gpoauth/GeoPlatformUser.ts","ng://ng-gpoauth/auth.ts","ng://ng-gpoauth/angular/interceptor.ts","ng://ng-gpoauth/angular/index.ts","ng://ng-gpoauth/index.ts"],"sourcesContent":["import { JWT } from './authTypes'\n\n/**\n * Convience class representing a simplified user.\n *\n * @class GeoPlatformUser\n */\nexport class GeoPlatformUser  {\n    id      : string\n    username: string\n    name    : string\n    email   : string\n    org     : string\n    roles   : string\n    groups  : [{_id: string, name: string}]\n    exp     : number\n\n    constructor(opts: JWT) {\n      this.id = opts.sub\n      this.username = opts.username\n      this.name = opts.name\n      this.email = opts.email\n      this.org = opts.orgs[0] && opts.orgs[0].name\n      this.groups = opts.groups\n      this.roles = opts.roles\n      this.exp = opts.exp\n    }\n\n    toJSON() {\n      return JSON.parse(JSON.stringify(Object.assign({}, this)));\n    };\n\n    clone() {\n      return Object.assign({}, this)\n    };\n\n    compare(arg: any) {\n      if (arg instanceof GeoPlatformUser) {\n        return this.id === arg.id;\n      } else if (typeof(arg) === 'object') {\n        return typeof(arg.id) !== 'undefined' &&\n          arg.id === this.id;\n      }\n      return false;\n    };\n\n    isAuthorized(role: string) {\n      return this.groups &&\n              !!this.groups\n                      .map(g => g.name)\n                      .filter(n => n === role)\n                      .length;\n    };\n  }","import { ngMessenger, AuthConfig, JWT, UserProfile } from '../src/authTypes'\nimport { GeoPlatformUser } from './GeoPlatformUser'\nimport axios from 'axios'\n\nfunction getJson(url: string, jwt?: string) {\n  return axios.get(url, {\n                          headers: { 'Authorization' : jwt ? `Bearer ${jwt}` : '' },\n                          responseType: 'json'\n                        })\n                        .then(r => r.data);\n}\n\n/**\n * Authentication Service\n */\nexport class AuthService {\n\n  config: AuthConfig\n  messenger: ngMessenger\n\n  /**\n   *\n   * @class AuthService\n   * @constructor\n   *\n   * @param {AuthConfig} config\n   * @param\n   */\n  constructor(config: AuthConfig, ngMessenger: ngMessenger){\n    const self = this;\n    this.config = config;\n    this.messenger = ngMessenger\n\n    // Setup general event listeners that always run\n    addEventListener('message', (event: any) => {\n      // Handle User Authenticated\n      if(event.data === 'iframe:userAuthenticated'){\n        self.init() // will broadcast to angular (side-effect)\n      }\n\n      // Handle logout event\n      if(event.data === 'userSignOut'){\n        self.removeAuth()\n      }\n    })\n\n    const user = self.init()\n    if(!user && this.config.AUTH_TYPE === 'grant') self.ssoCheck()\n  }\n\n  /**\n   * Expose ngMessenger so that appliction code is able to\n   * subscribe to notifications sent by ng-gpoauth\n   */\n  getMessenger(): ngMessenger {\n    return this.messenger\n  }\n\n  /**\n   * Security wrapper for obfuscating values passed into local storage\n   */\n  private saveToLocalStorage(key: string, value: any) {\n    localStorage.setItem(key, btoa(value));\n  };\n\n  /**\n   * Retrieve and decode value from localstorage\n   *\n   * @param key\n   */\n  getFromLocalStorage(key: string): string {\n    const raw = localStorage.getItem(key)\n    try{\n      return raw ?\n              atob(raw) :\n              undefined;\n    } catch (e){ // Catch bad encoding or formally not encoded\n      return undefined;\n    }\n  };\n\n  private ssoCheck(): void {\n    const self = this;\n    const ssoURL = `/login?sso=true&cachebuster=${(new Date()).getTime()}`\n    const ssoIframe = this.createIframe(ssoURL)\n\n    // Setup ssoIframe specific handlers\n    addEventListener('message', (event: any) => {\n      // Handle SSO login failure\n      if(event.data === 'iframe:ssoFailed'){\n        if(ssoIframe && ssoIframe.remove) // IE 11 - gotcha\n          ssoIframe.remove()\n        // Force login only after SSO has failed\n        if(this.config.FORCE_LOGIN) self.forceLogin()\n      }\n\n      // Handle User Authenticated\n      if(event.data === 'iframe:userAuthenticated'){\n        if(ssoIframe && ssoIframe.remove) // IE 11 - gotcha\n          ssoIframe.remove()\n      }\n    })\n  }\n\n  /**\n   * We keep this outside the constructor so that other services call\n   * call it to trigger the side-effects.\n   *\n   * @method init\n   */\n  private init(): GeoPlatformUser {\n    const jwt = this.getJWT();\n    if(jwt) this.setAuth(jwt)\n\n    //clean hosturl on redirect from oauth\n    if (this.getJWTFromUrl()) {\n      if(window.history && window.history.replaceState){\n        window.history.replaceState( {} , 'Remove token from URL', window.location.href.replace(/[\\?\\&]access_token=.*\\&token_type=Bearer/, '') )\n      } else {\n        window.location.search.replace(/[\\?\\&]access_token=.*\\&token_type=Bearer/, '')\n      }\n    }\n\n    return this.getUserFromJWT(jwt)\n  }\n\n  /**\n   * Create an invisable iframe and appends it to the bottom of the page.\n   *\n   * @method createIframe\n   * @returns {HTMLIFrameElement}\n   */\n  private createIframe(url: string): HTMLIFrameElement {\n    let iframe = document.createElement('iframe')\n\n    iframe.style.display = \"none\";\n    iframe.src = url\n    document.body.appendChild(iframe);\n\n    return iframe\n  };\n\n  /**\n   * Redirects or displays login window the page to the login site\n   */\n  login() {\n    // Check implicit we need to actually redirect them\n    if(this.config.AUTH_TYPE === 'token') {\n      window.location.href = this.config.IDP_BASE_URL +\n              `/auth/authorize?client_id=${this.config.APP_ID}` +\n              `&response_type=${this.config.AUTH_TYPE}` +\n              `&redirect_uri=${encodeURIComponent(this.config.CALLBACK || '/login')}`\n\n    // Otherwise pop up the login modal\n    } else {\n      // Iframe login\n      if(this.config.ALLOWIFRAMELOGIN){\n        this.messenger.broadcast('auth:requireLogin')\n\n        // Redirect login\n      } else {\n        window.location.href = this.config.LOGIN_URL\n                        || `/login?redirect_url=${encodeURIComponent(window.location.href)}`\n      }\n    }\n  };\n\n  /**\n   * Performs background logout and requests jwt revokation\n   */\n  logout(): Promise<void>{\n    const self = this;\n    // Create iframe to manually call the logout and remove gpoauth cookie\n    // https://stackoverflow.com/questions/13758207/why-is-passportjs-in-node-not-removing-session-on-logout#answer-33786899\n    // this.createIframe(`${this.config.IDP_BASE_URL}/auth/logout`)\n\n    // Save JWT to send with final request to revoke it\n    self.removeAuth() // purge the JWT\n\n    return new Promise((resolve, reject) => {\n      getJson(`${this.config.APP_BASE_URL}/revoke?sso=true`, this.getJWT())\n              .then(() => {\n                if(this.config.LOGOUT_URL) window.location.href = this.config.LOGOUT_URL\n                if(this.config.FORCE_LOGIN) self.forceLogin();\n                resolve();\n              })\n              .catch((err: Error) => {\n                console.log('Error logging out: ', err);\n                reject(err);\n              });\n    })\n\n  };\n\n  /**\n   * Optional force redirect for non-public services\n   */\n  forceLogin() {\n    this.login();\n  };\n\n  /**\n   * Get protected user profile\n   */\n  getOauthProfile(): Promise<UserProfile> {\n    const JWT = this.getJWT();\n\n    return new Promise<UserProfile>((resolve, reject) => {\n      //check to make sure we can make called\n      if (JWT) {\n        getJson(`${this.config.IDP_BASE_URL}/api/profile`, JWT)\n          .then((response: UserProfile) =>  resolve(response))\n          .catch(err => reject(err))\n      } else {\n        reject(null)\n      }\n\n    })\n  };\n\n  /**\n   * Get User object from the JWT.\n   *\n   * If no JWT is provided it will be looked for at the normal JWT\n   * locations (localStorage or URL queryString).\n   *\n   * @param {JWT} [jwt] - the JWT to extract user from.\n   */\n  getUserFromJWT(jwt: string): GeoPlatformUser {\n    const user = this.parseJwt(jwt)\n    return user ?\n            new GeoPlatformUser(Object.assign({}, user, { id: user.sub })) :\n            null;\n  }\n\n  /**\n   * If the callback parameter is specified, this method\n   * will return undefined. Otherwise, it returns the user (or null).\n   *\n   * Side Effects:\n   *  - Will redirect users if no valid JWT was found\n   *\n   * @param callback optional function to invoke with the user\n   * @return object representing current user\n   */\n  getUserSync(callback?: (user: GeoPlatformUser) => any): GeoPlatformUser {\n    const jwt = this.getJWT();\n    // If callback provided we can treat async and call server\n    if(callback && typeof(callback) === 'function'){\n      this.check()\n      .then(user => callback(user));\n\n      // If no callback we have to provide a sync response (no network)\n    } else {\n      // We allow front end to get user data if grant type and expired\n      // because they will recieve a new token automatically when\n      // making a call to the client(application)\n      return this.isImplicitJWT(jwt) && this.isExpired(jwt) ?\n              null :\n              this.getUserFromJWT(jwt);\n    }\n  }\n\n  /**\n   * Promise version of get user.\n   *\n   * Below is a table of how this function handels this method with\n   * differnt configurations.\n   *  - FORCE_LOGIN : Horizontal\n   *  - ALLOWIFRAMELOGIN : Vertical\n   *\n   *\n   * getUser  | T | F (FORCE_LOGIN)\n   * -----------------------------\n   * T        | 1 | 2\n   * F        | 3 | 4\n   * (ALLOWIFRAMELOGIN)\n   *\n   * Cases:\n   * 1. Delay resolve function till user is logged in\n   * 2. Return null (if user not authorized)\n   * 3. Force the redirect\n   * 4. Return null (if user not authorized)\n   *\n   * NOTE:\n   * Case 1 above will cause this method's promise to be a long stall\n   * until the user completes the login process. This should allow the\n   * app to forgo a reload is it should have waited till the entire\n   * time till the user was successfully logged in.\n   *\n   * @method getUser\n   *\n   * @returns {Promise<User>} User - the authenticated user\n   */\n  getUser(): Promise<GeoPlatformUser | null> {\n    const self = this;\n\n    // For basic testing\n    // this.messenger.broadcast('userAuthenticated', { name: 'username'})\n\n    return new Promise<GeoPlatformUser | null>((resolve, reject) => {\n      this.check()\n      .then(user => {\n        if(user) {\n          resolve(user)\n        } else {\n          // Case 1 - ALLOWIFRAMELOGIN: true | FORCE_LOGIN: true\n          if(this.config.ALLOWIFRAMELOGIN && this.config.FORCE_LOGIN){\n            // Resolve with user once they have logged in\n            this.messenger.on('userAuthenticated', (event: Event, user: GeoPlatformUser) => {\n              resolve(user)\n            })\n          }\n          // Case 2 - ALLOWIFRAMELOGIN: true | FORCE_LOGIN: false\n          if(this.config.ALLOWIFRAMELOGIN && !this.config.FORCE_LOGIN){\n            resolve(null)\n          }\n          // Case 3 - ALLOWIFRAMELOGIN: false | FORCE_LOGIN: true\n          if(!this.config.ALLOWIFRAMELOGIN && this.config.FORCE_LOGIN){\n            addEventListener('message', (event: any) => {\n              // Handle SSO login failure\n              if(event.data === 'iframe:ssoFailed'){\n                resolve(self.getUser())\n              }\n            })\n            resolve(null)\n          }\n          // Case 4 - ALLOWIFRAMELOGIN: false | FORCE_LOGIN: false\n          if(!this.config.ALLOWIFRAMELOGIN && !this.config.FORCE_LOGIN){\n            resolve(null) // or reject?\n          }\n        }\n      })\n      .catch((err: Error) => console.log(err))\n    })\n  };\n\n  /**\n   * Check function being used by some front end apps already.\n   * (wrapper for getUser)\n   *\n   * @method check\n   * @returns {User} - ng-common user object or null\n   */\n  check(): Promise<GeoPlatformUser>{\n    return new Promise((resolve, rej) => {\n      const jwt = this.getJWT();\n\n      // If no local JWT\n      if(!jwt)\n        return this.checkWithClient(\"\")\n                   .then(jwt => jwt.length ? this.getUserFromJWT(jwt) : null);\n\n      if(!jwt) return resolve(null);\n      if(!this.isImplicitJWT(jwt)){ // Grant token\n        return this.isExpired(jwt) ?\n                this.checkWithClient(jwt)\n                  .then(jwt => this.getUserFromJWT(jwt)) : // Check with server\n                  resolve(this.getUserFromJWT(jwt));\n      } else { // Implicit JWT\n        return this.isExpired(jwt) ?\n                Promise.reject(null) :\n                resolve(this.getUserFromJWT(jwt));\n      }\n    })\n  }\n\n  /**\n   * Makes a call to a service hosting node-gpoauth to allow for a\n   * token refresh on an expired token, or a token that has been\n   * invalidated to be revoked.\n   *\n   * Note: Client as in hosting application:\n   *    https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2\n   *\n   * @method checkWithClient\n   * @param {jwt} - encoded accessToken/JWT\n   *\n   * @return {Promise<jwt>} - promise resolving with a JWT\n   */\n  checkWithClient(originalJWT: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if(this.config.AUTH_TYPE === 'token'){\n        resolve(null)\n      } else {\n\n        axios(`${this.config.APP_BASE_URL}/checktoken`, {\n          headers: {\n            'Authorization' : originalJWT ? `Bearer ${originalJWT}` : '',\n            'Access-Control-Expose-Headers': 'Authorization, WWW-Authorization, content-length'\n          }\n        })\n        .then(resp => {\n          const header = resp.headers['authorization']\n          const newJWT = header && header.replace('Bearer ','')\n          if(newJWT) this.setAuth(newJWT);\n\n          resolve(newJWT ? newJWT : originalJWT);\n        })\n        .catch(err => reject(err));\n      }\n    })\n  }\n\n  //=====================================================\n\n  /**\n   * Extract token from current URL\n   *\n   * @method getJWTFromUrl\n   *\n   * @return {String | undefined} - JWT Token (raw string)\n   */\n  getJWTFromUrl(): string {\n    const queryString = (window && window.location && window.location.hash) ?\n                          window.location.hash :\n                          window.location.toString();\n    const res = queryString.match(/access_token=([^\\&]*)/);\n    return res && res[1];\n  };\n\n  /**\n   * Load the JWT stored in local storage.\n   *\n   * @method getJWTfromLocalStorage\n   *\n   * @return {JWT | undefined} An object wih the following format:\n   */\n  getJWTfromLocalStorage(): string {\n    return this.getFromLocalStorage('gpoauthJWT')\n  };\n\n  /**\n   * Attempt and pull JWT from the following locations (in order):\n   *  - URL query parameter 'access_token' (returned from IDP)\n   *  - Browser local storage (saved from previous request)\n   *\n   * @method getJWT\n   *\n   * @return {sting | undefined}\n   */\n  getJWT(): string {\n    const jwt = this.getJWTFromUrl() || this.getJWTfromLocalStorage()\n    // Only deny implicit tokens that have expired\n    if(!jwt || (jwt && this.isImplicitJWT(jwt) && this.isExpired(jwt))) {\n      return null;\n    } else {\n      return jwt;\n    }\n  };\n\n  /**\n   * Remove the JWT saved in local storge.\n   *\n   * @method clearLocalStorageJWT\n   *\n   * @return  {undefined}\n   */\n  private clearLocalStorageJWT(): void {\n    localStorage.removeItem('gpoauthJWT')\n  };\n\n  /**\n   * Is a token expired.\n   *\n   * @method isExpired\n   * @param {JWT} jwt - A JWT\n   *\n   * @return {boolean}\n   */\n  isExpired(jwt: string): boolean {\n    const parsedJWT = this.parseJwt(jwt)\n    if(parsedJWT){\n      const now = (new Date()).getTime() / 1000;\n      return now > parsedJWT.exp;\n    }\n    return true\n  };\n\n  /**\n   * Is the JWT an implicit JWT?\n   * @param jwt\n   */\n  isImplicitJWT(jwt: string): boolean {\n    const parsedJWT = this.parseJwt(jwt)\n    return parsedJWT && parsedJWT.implicit;\n  }\n\n  /**\n   * Unsafe (signature not checked) unpacking of JWT.\n   *\n   * @param {string} token - Access Token (JWT)\n   * @return {Object} the parsed payload in the JWT\n   */\n  parseJwt(token: string): JWT {\n    var parsed;\n    if (token) {\n      try {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace('-', '+').replace('_', '/');\n        parsed = JSON.parse(atob(base64));\n      } catch(e) { /* Don't throw parse error */ }\n    }\n    return parsed;\n  };\n\n  /**\n   * Simple front end validion to verify JWT is complete and not\n   * expired.\n   *\n   * Note:\n   *  Signature validation is the only truly save method. This is done\n   *  automatically in the node-gpoauth module.\n   */\n  validateJwt(token: string): boolean {\n    var parsed = this.parseJwt(token);\n    var valid = (parsed && parsed.exp && parsed.exp * 1000 > Date.now()) ? true : false;\n    return valid;\n  };\n\n  /**\n   * Save JWT to localStorage and in the request headers for accessing\n   * protected resources.\n   *\n   * @param {JWT} jwt\n   */\n  public setAuth(jwt: string): void {\n    this.saveToLocalStorage('gpoauthJWT', jwt)\n    this.messenger.broadcast(\"userAuthenticated\", this.getUserFromJWT(jwt))\n  };\n\n  /**\n   * Purge the JWT from localStorage and authorization headers.\n   */\n  private removeAuth(): void {\n    localStorage.removeItem('gpoauthJWT')\n    // Send null user as well (backwards compatability)\n    this.messenger.broadcast(\"userAuthenticated\", null)\n    this.messenger.broadcast(\"userSignOut\")\n  };\n}\n\n\nexport const DefaultAuthConf: AuthConfig = {\n  AUTH_TYPE: 'grant',\n  ALLOWIFRAMELOGIN: false,\n  FORCE_LOGIN: false,\n  ALLOW_DEV_EDITS: false,\n  APP_BASE_URL: '' // absolute path // use . for relative path\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpErrorResponse,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../auth';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) {}\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let updatedRequest;\n\n        // ====== For sending token (with request) ======//\n\n        const jwt = this.authService.getJWT();\n        if(!jwt){\n            // Carry on... nothing to do here\n            updatedRequest = request;\n        } else {\n            // Send our current token\n            let clone = request.clone({\n            setHeaders: {\n                Authorization: `Bearer ${jwt}`\n            }\n            });\n            updatedRequest = clone;\n        }\n\n        // ====== For sending token (with request) ======//\n\n        /**\n         * Handler for successful responses returned from the server.\n         * This function must to the following:\n         *  - check the URL for a JWT\n         *  - check the 'Authorization' header for a JWT\n         *  - set a new JWT in AuthService\n         *\n         * @param {HttpEvent<any>} resp - response from server\n         */\n        function responseHandler(event: HttpEvent<any>){\n            if (event instanceof HttpResponse) {\n                // look for JWT in URL\n                const urlJwt = this.authService.getJWTFromUrl();\n\n                // look for JWT in auth headers\n                const headerJwt = event.headers.get('Authorization')\n                                            .replace('Bearer', '')\n                                            .trim();\n\n                const newJwt = urlJwt || headerJwt;\n\n                if(newJwt)\n                    this.authService.setAuth(newJwt)\n\n                // TODO: may want to look at revoking if:\n                //  'Authorization' : 'Bearer '\n                // comes back from server....\n            }\n        }\n\n        /**\n         * The is the error handler when an unauthenticated request\n         * comes back from the server...\n         *\n         * @param {Error} err - Error from server\n         */\n        function responseFailureHandler(err: any){\n            if (err instanceof HttpErrorResponse) {\n                if (err.status === 401) {\n                    // Should we check if forceLogin is set and force them???\n                }\n            }\n        }\n\n        // ==============================================//\n\n        // setup and return with handlers\n        return next\n                .handle(updatedRequest)\n                .do(responseHandler, responseFailureHandler);\n  }\n}","/**\n * For Angluar 2+ (TypeScript)\n */\nimport { MSG, ngMessenger, AuthConfig, authMessage } from '../authTypes'\nimport { AuthService, DefaultAuthConf } from '../auth'\nimport { GeoPlatformUser } from '../GeoPlatformUser'\n\nimport { Subject } from 'rxjs'\n\n// Setup messageProvider\n\nexport class msgProvider implements ngMessenger<Subject<MSG>> {\n    sub: Subject<MSG>\n\n    constructor(){\n        this.sub = new Subject<MSG>();\n    }\n\n    raw(){\n        return this.sub;\n    }\n\n    broadcast(name: authMessage, user: GeoPlatformUser){\n        this.sub.next({name, user})\n    }\n\n    on(name: authMessage, func: (e: Event, data: GeoPlatformUser) => any){\n        this.sub\n            .filter(msg => msg.name === name)\n            .subscribe(msg => func(new Event(msg.name), msg.user))\n    }\n}\n\n\n/**\n * Expose the class that can be loaded in Angular\n *\n * TODO: allow differnt types here:\n *  - Observible\n *  - Promise\n *  - Object\n */\nexport function ngGpoauthFactory(config?: AuthConfig): AuthService {\n    return new AuthService(Object.assign({}, DefaultAuthConf, config),  new msgProvider())\n}\n\n// Expose internal types\nexport { AuthService } from '../auth'\nexport { GeoPlatformUser } from '../GeoPlatformUser'\nexport { TokenInterceptor } from './interceptor'","import { AuthService, DefaultAuthConf } from './auth'\nimport { AuthConfig } from './authTypes'\nimport { msgProvider } from './angular/index'\n\n/**\n * Expose the class that can be loaded in Angular\n *\n * TODO: allow differnt types here:\n *  - Observible\n *  - Promise\n *  - Object\n */\nexport function ngGpoauthFactory(config?: AuthConfig): AuthService {\n    return new AuthService(Object.assign({}, DefaultAuthConf, config),  new msgProvider())\n}\n\n// Expose internal types\nexport { AuthService } from './auth'\nexport { GeoPlatformUser } from './GeoPlatformUser'\nexport { TokenInterceptor } from './angular/interceptor'"],"names":["HttpResponse","HttpErrorResponse","Injectable","Subject"],"mappings":"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"}
