{"version":3,"file":"ng-gpoauth.js.map","sources":["ng://ng-gpoauth/GeoPlatformUser.ts","ng://ng-gpoauth/auth.ts","ng://ng-gpoauth/angular/interceptor.ts","ng://ng-gpoauth/angular/index.ts","ng://ng-gpoauth/index.ts"],"sourcesContent":["import { JWT } from './authTypes'\n\n/**\n * Convience class representing a simplified user.\n *\n * @class GeoPlatformUser\n */\nexport class GeoPlatformUser  {\n    id      : string\n    username: string\n    name    : string\n    email   : string\n    org     : string\n    roles   : string\n    groups  : [{_id: string, name: string}]\n    exp     : number\n\n    constructor(opts: JWT) {\n      this.id = opts.sub\n      this.username = opts.username\n      this.name = opts.name\n      this.email = opts.email\n      this.org = opts.orgs[0] && opts.orgs[0].name\n      this.groups = opts.groups\n      this.roles = opts.roles\n      this.exp = opts.exp\n    }\n\n    toJSON() {\n      return JSON.parse(JSON.stringify(Object.assign({}, this)));\n    };\n\n    clone() {\n      return Object.assign({}, this)\n    };\n\n    compare(arg: any) {\n      if (arg instanceof GeoPlatformUser) {\n        return this.id === arg.id;\n      } else if (typeof(arg) === 'object') {\n        return typeof(arg.id) !== 'undefined' &&\n          arg.id === this.id;\n      }\n      return false;\n    };\n\n    isAuthorized(role: string) {\n      return this.groups &&\n              !!this.groups\n                      .map(g => g.name)\n                      .filter(n => n === role)\n                      .length;\n    };\n  }","import { ngMessenger, AuthConfig, JWT, UserProfile } from '../src/authTypes'\nimport { GeoPlatformUser } from './GeoPlatformUser'\nimport axios from 'axios'\n\nconst AUTH_STORAGE_KEY = 'gpoauthJWT'\nconst REVOKE_RESPONSE = '<REVOKED>';\n\nasync function getJson(url: string, jwt?: string) {\n  const resp = await axios.get(url, {\n                        headers: { 'Authorization' : jwt ? `Bearer ${jwt}` : '' },\n                        responseType: 'json'\n                      })\n  return resp.data;\n}\n\n\n/**\n * Authentication Service\n */\nexport class AuthService {\n\n  config: AuthConfig\n  messenger: ngMessenger\n\n  /**\n   *\n   * @class AuthService\n   * @constructor\n   *\n   * @param {AuthConfig} config\n   * @param\n   */\n  constructor(config: AuthConfig, ngMessenger: ngMessenger){\n    const self = this;\n    this.config = config;\n    this.messenger = ngMessenger\n\n    // Setup general event listeners that always run\n    addEventListener('message', (event: any) => {\n      // Handle User Authenticated\n      if(event.data === 'iframe:userAuthenticated'){\n        self.init() // will broadcast to angular (side-effect)\n      }\n\n      // Handle logout event\n      if(event.data === 'userSignOut'){\n        self.removeAuth()\n      }\n    })\n\n    self.init()\n      .then(user => {\n        if(this.config.ALLOW_SSO_LOGIN && !user && this.config.AUTH_TYPE === 'grant')\n          self.ssoCheck()\n      });\n  }\n\n  /**\n   * Expose ngMessenger so that appliction code is able to\n   * subscribe to notifications sent by ng-gpoauth\n   */\n  getMessenger(): ngMessenger {\n    return this.messenger\n  }\n\n  /**\n   * Security wrapper for obfuscating values passed into local storage\n   */\n  private saveToLocalStorage(key: string, value: any) {\n    localStorage.setItem(key, btoa(value));\n  };\n\n  /**\n   * Retrieve and decode value from localstorage\n   *\n   * @param key\n   */\n  getFromLocalStorage(key: string): string {\n    const raw = localStorage.getItem(key)\n    try{\n      return raw ?\n              atob(raw) :\n              undefined;\n    } catch (e){ // Catch bad encoding or formally not encoded\n      return undefined;\n    }\n  };\n\n  private ssoCheck(): void {\n    const self = this;\n    const ssoURL = `${this.config.APP_BASE_URL}/login?sso=true&cachebuster=${(new Date()).getTime()}`\n    const ssoIframe = this.createIframe(ssoURL)\n\n    // Setup ssoIframe specific handlers\n    addEventListener('message', (event: any) => {\n      // Handle SSO login failure\n      if(event.data === 'iframe:ssoFailed'){\n        if(ssoIframe && ssoIframe.remove) // IE 11 - gotcha\n          ssoIframe.remove()\n        // Force login only after SSO has failed\n        if(this.config.FORCE_LOGIN) self.forceLogin()\n      }\n\n      // Handle User Authenticated\n      if(event.data === 'iframe:userAuthenticated'){\n        if(ssoIframe && ssoIframe.remove) // IE 11 - gotcha\n          ssoIframe.remove()\n      }\n    })\n  }\n\n  /**\n   * We keep this outside the constructor so that other services call\n   * call it to trigger the side-effects.\n   *\n   * @method init\n   */\n  private async init(): Promise<GeoPlatformUser> {\n    const jwt = this.getJWT();\n\n    //clean hosturl on redirect from oauth\n    if (this.getJWTFromUrl()) this.removeTokenFromUrl()\n\n    if(jwt) {\n      this.setAuth(jwt)\n      return this.getUserFromJWT(jwt)\n    } else {\n      // call to checkwith Server\n      return await this.getUser();\n    }\n  }\n\n  /**\n   * Clears the access_token property from the URL.\n   */\n  private removeTokenFromUrl(): void {\n    const replaceRegex = /[\\?\\&]access_token=.*(\\&token_type=Bearer)?/\n    if(window.history && window.history.replaceState){\n      window.history.replaceState( {} , 'Remove token from URL', window.location.href.replace(replaceRegex, '') )\n    } else {\n      window.location.search.replace(replaceRegex, '')\n    }\n  }\n\n  /**\n   * Create an invisable iframe and appends it to the bottom of the page.\n   *\n   * @method createIframe\n   * @returns {HTMLIFrameElement}\n   */\n  private createIframe(url: string): HTMLIFrameElement {\n    let iframe = document.createElement('iframe')\n\n    iframe.style.display = \"none\";\n    iframe.src = url\n    document.body.appendChild(iframe);\n\n    return iframe\n  };\n\n  /**\n   * Redirects or displays login window the page to the login site\n   */\n  login(path?: string): void {\n    // Check implicit we need to actually redirect them\n    const loc = path ?\n                `${window.location.origin}${path}` :\n                this.config.CALLBACK ?\n                    this.config.CALLBACK :\n                    window.location.href // default\n\n    if(this.config.AUTH_TYPE === 'token') {\n      window.location.href = this.config.IDP_BASE_URL +\n              `/auth/authorize?client_id=${this.config.APP_ID}` +\n              `&response_type=${this.config.AUTH_TYPE}` +\n              `&redirect_uri=${encodeURIComponent(loc || '/login')}`\n\n    // Otherwise pop up the login modal\n    } else {\n      // Iframe login\n      if(this.config.ALLOW_IFRAME_LOGIN){\n        this.messenger.broadcast('auth:requireLogin')\n\n      // Redirect login\n      } else {\n        window.location.href = this.config.LOGIN_URL\n                        || `/login?redirect_url=${encodeURIComponent(loc)}`\n      }\n    }\n  };\n\n  /**\n   * Performs background logout and requests jwt revokation\n   */\n  async logout(): Promise<void> {\n    // Create iframe to manually call the logout and remove gpoauth cookie\n    // https://stackoverflow.com/questions/13758207/why-is-passportjs-in-node-not-removing-session-on-logout#answer-33786899\n    // this.createIframe(`${this.config.IDP_BASE_URL}/auth/logout`)\n\n    await getJson(`${this.config.APP_BASE_URL}/revoke?sso=true`, this.getJWT())\n    this.removeAuth() // purge the JWT\n\n    if(this.config.LOGOUT_URL) window.location.href = this.config.LOGOUT_URL\n    if(this.config.FORCE_LOGIN) this.forceLogin();\n  }\n\n  /**\n   * Optional force redirect for non-public services\n   */\n  forceLogin() {\n    this.login();\n  };\n\n  /**\n   * Get protected user profile\n   */\n  async getOauthProfile(): Promise<UserProfile> {\n    const JWT = this.getJWT();\n\n    return JWT ?\n      await getJson(`${this.config.IDP_BASE_URL}/api/profile`, JWT) :\n      null;\n  };\n\n  /**\n   * Get User object from the JWT.\n   *\n   * If no JWT is provided it will be looked for at the normal JWT\n   * locations (localStorage or URL queryString).\n   *\n   * @param {JWT} [jwt] - the JWT to extract user from.\n   */\n  getUserFromJWT(jwt: string): GeoPlatformUser {\n    const user = this.parseJwt(jwt)\n    return user ?\n            new GeoPlatformUser(Object.assign({}, user, { id: user.sub })) :\n            null;\n  }\n\n  /**\n   * If the callback parameter is specified, this method\n   * will return undefined. Otherwise, it returns the user (or null).\n   *\n   * Side Effects:\n   *  - Will redirect users if no valid JWT was found\n   *\n   * @param callback optional function to invoke with the user\n   * @return object representing current user\n   */\n  getUserSync(callback?: (user: GeoPlatformUser) => any): GeoPlatformUser {\n    const jwt = this.getJWT();\n      // We allow front end to get user data if grant type and expired\n      // because they will recieve a new token automatically when\n      // making a call to the client(application)\n      return this.isImplicitJWT(jwt) && this.isExpired(jwt) ?\n              null :\n              this.getUserFromJWT(jwt);\n  }\n\n  /**\n   * Promise version of get user.\n   *\n   * Below is a table of how this function handels this method with\n   * differnt configurations.\n   *  - FORCE_LOGIN : Horizontal\n   *  - ALLOW_IFRAME_LOGIN : Vertical\n   *\n   *\n   * getUser  | T | F (FORCE_LOGIN)\n   * -----------------------------\n   * T        | 1 | 2\n   * F        | 3 | 4\n   * (ALLOW_IFRAME_LOGIN)\n   *\n   * Cases:\n   * 1. Delay resolve function till user is logged in\n   * 2. Return null (if user not authorized)\n   * 3. Force the redirect\n   * 4. Return null (if user not authorized)\n   *\n   * NOTE:\n   * Case 1 above will cause this method's promise to be a long stall\n   * until the user completes the login process. This should allow the\n   * app to forgo a reload is it should have waited till the entire\n   * time till the user was successfully logged in.\n   *\n   * @method getUser\n   *\n   * @returns {Promise<User>} User - the authenticated user\n   */\n  async getUser(): Promise<GeoPlatformUser> {\n    // For basic testing\n    // this.messenger.broadcast('userAuthenticated', { name: 'username'})\n\n    // return new Promise<GeoPlatformUser>((resolve, reject) => {\n    const user = await this.check();\n    if(user) return user\n\n    // Case 1 - ALLOW_IFRAME_LOGIN: true | FORCE_LOGIN: true\n    if(this.config.ALLOW_IFRAME_LOGIN && this.config.FORCE_LOGIN){\n      // Resolve with user once they have logged in\n      this.messenger.on('userAuthenticated', (event: Event, user: GeoPlatformUser) => {\n        return user\n      })\n    }\n    // Case 2 - ALLOW_IFRAME_LOGIN: true | FORCE_LOGIN: false\n    if(this.config.ALLOW_IFRAME_LOGIN && !this.config.FORCE_LOGIN){\n      return null\n    }\n    // Case 3 - ALLOW_IFRAME_LOGIN: false | FORCE_LOGIN: true\n    if(!this.config.ALLOW_IFRAME_LOGIN && this.config.FORCE_LOGIN){\n      addEventListener('message', (event: any) => {\n        // Handle SSO login failure\n        if(event.data === 'iframe:ssoFailed'){\n          return this.getUser()\n        }\n      })\n      return null\n    }\n    // Case 4 - ALLOW_IFRAME_LOGIN: false | FORCE_LOGIN: false\n    if(!this.config.ALLOW_IFRAME_LOGIN && !this.config.FORCE_LOGIN){\n      return null // or reject?\n    }\n  };\n\n  /**\n   * Check function being used by some front end apps already.\n   * (wrapper for getUser)\n   *\n   * @method check\n   * @returns {User} - ng-common user object or null\n   */\n  async check(): Promise<GeoPlatformUser>{\n    const jwt = this.getJWT();\n\n    // If no local JWT\n    if(!jwt) {\n      const freshJwt = await this.checkWithClient(\"\");\n\n      return jwt && jwt.length ?\n              this.getUserFromJWT(freshJwt) :\n              null;\n    }\n    if(!this.isImplicitJWT(jwt)){ // Grant token\n      return this.isExpired(jwt) ?\n              await this.checkWithClient(jwt)\n                .then(jwt => this.getUserFromJWT(jwt)) : // Check with server\n              this.getUserFromJWT(jwt);\n\n    } else { // Implicit JWT\n      return this.isExpired(jwt) ?\n              Promise.reject(null) :\n              this.getUserFromJWT(jwt);\n    }\n  }\n\n  /**\n   * Makes a call to a service hosting node-gpoauth to allow for a\n   * token refresh on an expired token, or a token that has been\n   * invalidated to be revoked.\n   *\n   * Note: Client as in hosting application:\n   *    https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2\n   *\n   * @method checkWithClient\n   * @param {jwt} - encoded accessToken/JWT\n   *\n   * @return {Promise<jwt>} - promise resolving with a JWT\n   */\n  async checkWithClient(originalJWT: string): Promise<any> {\n    if(this.config.AUTH_TYPE === 'token'){\n      return null\n    } else {\n\n      const resp = await axios(`${this.config.APP_BASE_URL}/checktoken`, {\n                    headers: {\n                      'Authorization' : originalJWT ? `Bearer ${originalJWT}` : ''\n                    }\n                  })\n\n      const header = resp.headers['authorization']\n      const newJWT = header && header.replace('Bearer','').trim();\n\n      if(header && newJWT.length) this.setAuth(newJWT);\n      return newJWT ? newJWT : originalJWT;\n    }\n  }\n\n  //=====================================================\n\n  /**\n   * Extract token from current URL\n   *\n   * @method getJWTFromUrl\n   *\n   * @return {String | undefined} - JWT Token (raw string)\n   */\n  getJWTFromUrl(): string {\n    const queryString = (window && window.location && window.location.hash) ?\n                          window.location.hash :\n                          window.location.toString();\n    const res = queryString.match(/access_token=([^\\&]*)/);\n    return res && res[1];\n  };\n\n  /**\n   * Load the JWT stored in local storage.\n   *\n   * @method getJWTfromLocalStorage\n   *\n   * @return {JWT | undefined} An object wih the following format:\n   */\n  getJWTfromLocalStorage(): string {\n    return this.getFromLocalStorage(AUTH_STORAGE_KEY)\n  };\n\n  /**\n   * Attempt and pull JWT from the following locations (in order):\n   *  - URL query parameter 'access_token' (returned from IDP)\n   *  - Browser local storage (saved from previous request)\n   *\n   * @method getJWT\n   *\n   * @return {sting | undefined}\n   */\n  getJWT(): string {\n    const jwt = this.getJWTFromUrl() || this.getJWTfromLocalStorage()\n    // Only deny implicit tokens that have expired\n    if(!jwt || (jwt && this.isImplicitJWT(jwt) && this.isExpired(jwt))) {\n      return null;\n    } else {\n      return jwt;\n    }\n  };\n\n  /**\n   * Remove the JWT saved in local storge.\n   *\n   * @method clearLocalStorageJWT\n   *\n   * @return  {undefined}\n   */\n  private clearLocalStorageJWT(): void {\n    localStorage.removeItem(AUTH_STORAGE_KEY)\n  };\n\n  /**\n   * Is a token expired.\n   *\n   * @method isExpired\n   * @param {JWT} jwt - A JWT\n   *\n   * @return {boolean}\n   */\n  isExpired(jwt: string): boolean {\n    const parsedJWT = this.parseJwt(jwt)\n    if(parsedJWT){\n      const now = (new Date()).getTime() / 1000;\n      return now > parsedJWT.exp;\n    }\n    return true\n  };\n\n  /**\n   * Is the JWT an implicit JWT?\n   * @param jwt\n   */\n  isImplicitJWT(jwt: string): boolean {\n    const parsedJWT = this.parseJwt(jwt)\n    return parsedJWT && parsedJWT.implicit;\n  }\n\n  /**\n   * Unsafe (signature not checked) unpacking of JWT.\n   *\n   * @param {string} token - Access Token (JWT)\n   * @return {Object} the parsed payload in the JWT\n   */\n  parseJwt(token: string): JWT {\n    var parsed;\n    if (token) {\n      try {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace('-', '+').replace('_', '/');\n        parsed = JSON.parse(atob(base64));\n      } catch(e) { /* Don't throw parse error */ }\n    }\n    return parsed;\n  };\n\n  /**\n   * Simple front end validion to verify JWT is complete and not\n   * expired.\n   *\n   * Note:\n   *  Signature validation is the only truly save method. This is done\n   *  automatically in the node-gpoauth module.\n   */\n  validateJwt(token: string): boolean {\n    var parsed = this.parseJwt(token);\n    var valid = (parsed && parsed.exp && parsed.exp * 1000 > Date.now()) ? true : false;\n    return valid;\n  };\n\n  /**\n   * Save JWT to localStorage and in the request headers for accessing\n   * protected resources.\n   *\n   * @param {JWT} jwt\n   */\n  public setAuth(jwt: string): void {\n    if(jwt == REVOKE_RESPONSE){\n      this.logout()\n    } else {\n      this.saveToLocalStorage(AUTH_STORAGE_KEY, jwt)\n      this.messenger.broadcast(\"userAuthenticated\", this.getUserFromJWT(jwt))\n    }\n  };\n\n  /**\n   * Purge the JWT from localStorage and authorization headers.\n   */\n  private removeAuth(): void {\n    localStorage.removeItem(AUTH_STORAGE_KEY)\n    // Send null user as well (backwards compatability)\n    this.messenger.broadcast(\"userAuthenticated\", null)\n    this.messenger.broadcast(\"userSignOut\")\n  };\n}\n\n\nexport const DefaultAuthConf: AuthConfig = {\n  AUTH_TYPE: 'grant',\n  APP_BASE_URL: '', // absolute path // use . for relative path\n  ALLOW_IFRAME_LOGIN: true,\n  FORCE_LOGIN: false,\n  ALLOW_DEV_EDITS: false,\n  ALLOW_SSO_LOGIN: true\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../auth';\n\n/**\n * Angular boilerplate because:\n * Angular6 HttpErrorResponse <> Angular7 HTTErrorPResponse\n */\nfunction isHttpErrorResponse(evt: any): boolean {\n    return evt && evt.error;\n}\n\n/**\n * Angular boilerplate because:\n * Angular6 HttpResponse <> Angular7 HTTPResponse\n * @param evt\n */\nfunction isHttpResponse(evt: any): boolean {\n    return evt && evt.body;\n}\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const self = this;\n        // TODO: we need to check for expiration and do a preflight to\n        // /checktoken if the current token is expired\n\n        // ====== For sending token (with request) ======//\n\n        const jwt = self.authService.getJWT();\n        if(jwt){\n            // Send our current token\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${jwt}`\n                }\n            });\n        }\n\n        // ====== For sending token (with request) ======//\n\n        /**\n         * Handler for successful responses returned from the server.\n         * This function must to the following:\n         *  - check the URL for a JWT\n         *  - check the 'Authorization' header for a JWT\n         *  - set a new JWT in AuthService\n         *\n         * @param {HttpEvent<any>} resp - response from server\n         */\n        function responseHandler(event: HttpResponse<any>): HttpEvent<any> {\n            if (isHttpResponse(event)) {\n                const AuthHeader = event.headers.get('Authorization') || '';\n\n                // look for JWT in URL\n                const urlJwt = self.authService.getJWTFromUrl();\n                // look for JWT in auth headers\n                const headerJwt = AuthHeader\n                                    .replace('Bearer', '')\n                                    .trim();\n\n                const newJwt = ((!!urlJwt && urlJwt.length) ? urlJwt : null)\n                            || ((!!headerJwt && headerJwt.length) ? headerJwt : null)\n\n                if(newJwt)\n                    self.authService.setAuth(newJwt)\n            }\n\n            return event;\n        }\n\n        /**\n         * The is the error handler when an unauthenticated request\n         * comes back from the server...\n         *\n         * @param {Error} err - Error from server\n         */\n        function responseFailureHandler(err: any){\n            if (isHttpErrorResponse(event)) {\n                if (err.status === 401) {\n                    self.authService.logout();\n                }\n            }\n        }\n\n        // ==============================================//\n\n        const handler = next.handle(request);\n        handler.subscribe(responseHandler, responseFailureHandler);\n\n        return handler\n  }\n}","/**\n * For Angluar 2+ (TypeScript)\n */\nimport { MSG, ngMessenger, AuthConfig, authMessage } from '../authTypes'\nimport { AuthService, DefaultAuthConf } from '../auth'\nimport { GeoPlatformUser } from '../GeoPlatformUser'\n\nimport { Subject } from 'rxjs'\n\n// Setup messageProvider\n\nexport class msgProvider implements ngMessenger<Subject<MSG>> {\n    sub: Subject<MSG>\n\n    constructor(){\n        this.sub = new Subject<MSG>();\n    }\n\n    raw(){\n        return this.sub;\n    }\n\n    broadcast(name: authMessage, user: GeoPlatformUser){\n        this.sub.next({name, user})\n    }\n\n    on(name: authMessage, func: (e: Event, data: GeoPlatformUser) => any){\n        this.sub\n            .filter(msg => msg.name === name)\n            .subscribe(msg => func(new Event(msg.name), msg.user))\n    }\n}\n\n\n/**\n * Expose the class that can be loaded in Angular\n *\n * TODO: allow differnt types here:\n *  - Observible\n *  - Promise\n *  - Object\n */\nexport function ngGpoauthFactory(config?: AuthConfig): AuthService {\n    return new AuthService(Object.assign({}, DefaultAuthConf, config),  new msgProvider())\n}\n\n// Expose internal types\nexport { AuthService } from '../auth'\nexport { GeoPlatformUser } from '../GeoPlatformUser'\nexport { TokenInterceptor } from './interceptor'\nexport { AuthConfig } from '../authTypes'","import { AuthService, DefaultAuthConf } from './auth'\nimport { AuthConfig } from './authTypes'\nimport { msgProvider } from './angular/index'\n\n/**\n * Expose the class that can be loaded in Angular\n *\n * TODO: allow differnt types here:\n *  - Observible\n *  - Promise\n *  - Object\n */\nexport function ngGpoauthFactory(config?: AuthConfig): AuthService {\n    return new AuthService(Object.assign({}, DefaultAuthConf, config),  new msgProvider())\n}\n\n// Expose internal types\nexport { AuthService } from './auth'\nexport { AuthConfig } from './authTypes'\nexport { GeoPlatformUser } from './GeoPlatformUser'\nexport { TokenInterceptor } from './angular/interceptor'"],"names":[],"mappings":"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"}
