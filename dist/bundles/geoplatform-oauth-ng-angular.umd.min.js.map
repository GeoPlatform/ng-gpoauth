{"version":3,"sources":["ng://@geoplatform/oauth-ng/angular/index.ts"],"names":["msgProvider","this","sub","Subject","prototype","raw","broadcast","name","user","next","on","func","filter","msg","subscribe","Event","config","AuthService","Object","assign","DefaultAuthConf"],"mappings":"4cAYA,IAAAA,EAAA,WAGI,SAAAA,IACIC,KAAKC,IAAM,IAAIC,EAAAA,QAgBvB,OAbIH,EAAAI,UAAAC,IAAA,WACI,OAAOJ,KAAKC,KAGhBF,EAAAI,UAAAE,UAAA,SAAUC,EAAmBC,GACzBP,KAAKC,IAAIO,KAAK,CAACF,KAAIA,EAAEC,KAAIA,KAG7BR,EAAAI,UAAAM,GAAA,SAAGH,EAAmBI,GAClBV,KAAKC,IACAU,QAAO,SAAAC,GAAO,OAAAA,EAAIN,OAASA,KAC3BO,WAAU,SAAAD,GAAO,OAAAF,EAAK,IAAII,MAAMF,EAAIN,MAAOM,EAAIL,UAE5DR,EApBA,sNA8BA,SAA0BgB,GACtB,OAAO,IAAIC,EAAAA,YAAYC,OAAOC,OAAO,GAAIC,EAAAA,gBAAiBJ,GAAU,IAAIhB","sourcesContent":["import { Subject } from 'rxjs'\nimport { MSG\n       , Messenger\n       , authMessage\n       , AuthConfig\n       , GeoPlatformUser\n       , AuthService\n       , DefaultAuthConf } from '@geoplatform/oauth-ng'\n\n/**\n * Angular implementation of message handler\n */\nclass msgProvider implements Messenger<Subject<MSG>> {\n    sub: Subject<MSG>\n\n    constructor(){\n        this.sub = new Subject<MSG>();\n    }\n\n    raw(){\n        return this.sub;\n    }\n\n    broadcast(name: authMessage, user: GeoPlatformUser){\n        this.sub.next({name, user})\n    }\n\n    on(name: authMessage, func: (e: Event, data: GeoPlatformUser) => any){\n        this.sub\n            .filter(msg => msg.name === name)\n            .subscribe(msg => func(new Event(msg.name), msg.user))\n    }\n}\n\n/**\n * Expose the class that can be loaded in Angular\n *\n * TODO: allow differnt types here:\n *  - Observible\n *  - Promise\n *  - Object\n */\nfunction ngGpoauthFactory(config?: AuthConfig): AuthService {\n    return new AuthService(Object.assign({}, DefaultAuthConf, config),  new msgProvider())\n}\n\n// Expose API for consumption\nexport { AuthService\n       , AuthConfig\n       , GeoPlatformUser\n       , ngGpoauthFactory }"]}