{"version":3,"file":"geoplatform-oauth-ng.js","sources":["ng://@geoplatform/oauth-ng/GeoPlatformUser.ts","ng://@geoplatform/oauth-ng/auth.ts","ng://@geoplatform/oauth-ng/public_api.ts","ng://@geoplatform/oauth-ng/geoplatform-oauth-ng.ts"],"sourcesContent":["import { JWT } from './authTypes'\n\n/**\n * Convience class representing a simplified user.\n *\n * GeoPlatformUser\n */\nexport class GeoPlatformUser  {\n    id      : string\n    username: string\n    name    : string\n    email   : string\n    org     : string\n    roles   : string\n    groups  : [{_id: string, name: string}]\n    exp     : number\n\n    constructor(opts: JWT) {\n      this.id = opts.sub\n      this.username = opts.username\n      this.name = opts.name\n      this.email = opts.email\n      this.org = opts.orgs[0] && opts.orgs[0].name\n      this.groups = opts.groups\n      this.roles = opts.roles\n      this.exp = opts.exp\n    }\n\n    toJSON() {\n      return JSON.parse(JSON.stringify(Object.assign({}, this)));\n    };\n\n    clone() {\n      return Object.assign({}, this)\n    };\n\n    compare(arg: any) {\n      if (arg instanceof GeoPlatformUser) {\n        return this.id === arg.id;\n      } else if (typeof(arg) === 'object') {\n        return typeof(arg.id) !== 'undefined' &&\n          arg.id === this.id;\n      }\n      return false;\n    };\n\n    isAuthorized(role: string) {\n      return this.groups &&\n              !!this.groups\n                      .map(g => g.name)\n                      .filter(n => n === role)\n                      .length;\n    };\n  }","declare var window: any\n\nimport { Messenger, AuthConfig, JWT, UserProfile, StringObj } from './authTypes'\nimport { GeoPlatformUser } from './GeoPlatformUser'\nimport axios from 'axios'\n\n\nconst ACCESS_TOKEN_COOKIE  = 'gpoauth-a'\n\nasync function getJson(url: string, jwt?: string) {\n  try{\n    const resp = await axios.get(url, {\n                          headers: { 'Authorization' : jwt ? `Bearer ${jwt}` : '' },\n                          responseType: 'json'\n                        })\n    return resp.data;\n  } catch(err) {\n    return {\n      error: \"Error fetching data\",\n      msg: err,\n      url,\n    }\n  }\n}\n\n\n/**\n * Authentication Service\n */\nexport class AuthService {\n\n  config: AuthConfig\n  messenger: Messenger\n  preveiousTokenPresentCheck: boolean\n\n  /**\n   *\n   * AuthService\n   *\n   * @param config\n   * @param\n   */\n  constructor(config: AuthConfig, ngMessenger: Messenger){\n    const self = this;\n    this.config = config;\n    this.messenger = ngMessenger\n\n    // Setup general event listeners that always run\n    addEventListener('message', (event: any) => {\n      // Handle User Authenticated\n      if(event.data === 'iframe:userAuthenticated'){\n        self.init() // will broadcast to angular (side-effect)\n      }\n\n      // Handle logout event\n      if(event.data === 'userSignOut'){\n        this.messenger.broadcast(\"userAuthenticated\", null)\n        this.messenger.broadcast(\"userSignOut\")\n      }\n    })\n\n    self.init()\n  }\n\n  /**\n   * Expose ngMessenger so that appliction code is able to\n   * subscribe to notifications sent by ng-gpoauth\n   */\n  getMessenger(): Messenger {\n    return this.messenger\n  }\n\n  /**\n   * Retrieve and decode value from localstorage\n   *\n   * @param key\n   */\n  getFromLocalStorage(key: string): string {\n    const raw = localStorage.getItem(key)\n    try{\n      return raw ?\n              atob(raw) :\n              undefined;\n    } catch (e){ // Catch bad encoding or formally not encoded\n      return undefined;\n    }\n  };\n\n  /**\n   * We keep this outside the constructor so that other services call\n   * call it to trigger the side-effects.\n   *\n   * @method init\n   */\n  private async init(): Promise<GeoPlatformUser> {\n    const self = this;\n\n    // Delay init until RPMService is loaded\n    if(this.RPMLoaded() && this.config.loadRPM){\n      const script = document.createElement('script');\n      script.onload = function () {\n          //do stuff with the script\n          self.init();\n      };\n      script.src = `https://s3.amazonaws.com/geoplatform-cdn/gp.rpm/${this.config.RPMVersion || 'stable'}/js/gp.rpm.browser.js`;\n\n      document.head.appendChild(script);\n      return // skip init() till RPM is loaded\n    }\n\n\n    const jwt = this.getJWT();\n\n    //clean hosturl on redirect from oauth\n    if (this.getJWTFromUrl()) {\n      if(window.history && window.history.replaceState){\n        window.history.replaceState( {} , 'Remove token from URL', window.location.href.replace(/[\\?\\&]access_token=.*\\&token_type=Bearer/, '') )\n      } else {\n        window.location.search.replace(/[\\?\\&]access_token=.*\\&token_type=Bearer/, '')\n      }\n    }\n\n    // Setup active session checher\n    this.preveiousTokenPresentCheck = !!jwt\n    setInterval(() => { self.checkForLocalToken() }, this.config.tokenCheckInterval)\n\n    const user = this.getUserFromJWT(jwt)\n    if(user)\n      this.messenger.broadcast(\"userAuthenticated\", user)\n\n    return user\n  }\n\n  /**\n   * Checks for the presence of token in cookie. If there has been a\n   * change (cookie appears or disapears) the fire event handlers to\n   * notify the appliction of the event.\n   */\n  private checkForLocalToken(){\n    const jwt = this.getJWT()\n    const tokenPresent = !!jwt\n    // compare with previous check\n    if (tokenPresent !== this.preveiousTokenPresentCheck)\n      tokenPresent ?\n        this.messenger.broadcast(\"userAuthenticated\", this.getUserFromJWT(jwt)) :\n        this.messenger.broadcast(\"userSignOut\");\n\n    // update previous state for next check\n    this.preveiousTokenPresentCheck = tokenPresent\n  }\n\n  /**\n   * Clears the access_token property from the URL.\n   */\n  private removeTokenFromUrl(): void {\n    const replaceRegex = /[\\?\\&]access_token=.*(\\&token_type=Bearer)?/\n    if(window.history && window.history.replaceState){\n      window.history.replaceState( {} , 'Remove token from URL', window.location.href.replace(replaceRegex, '') )\n    } else {\n      window.location.search.replace(replaceRegex, '')\n    }\n  }\n\n  /**\n   * Create an invisable iframe and appends it to the bottom of the page.\n   *\n   * @method createIframe\n   * @returns HTMLIFrameElement\n   */\n  private createIframe(url: string): HTMLIFrameElement {\n    let iframe = document.createElement('iframe')\n\n    iframe.style.display = \"none\";\n    iframe.src = url\n    document.body.appendChild(iframe);\n\n    return iframe\n  };\n\n  /**\n   * Redirects or displays login window the page to the login site\n   */\n  login(path?: string): void {\n    // Check implicit we need to actually redirect them\n    const loc = path ?\n                `${window.location.origin}${path}` :\n                this.config.CALLBACK ?\n                    this.config.CALLBACK :\n                    window.location.href // default\n\n    if(this.config.AUTH_TYPE === 'token') {\n      window.location.href = this.config.IDP_BASE_URL +\n              `/auth/authorize?client_id=${this.config.APP_ID}` +\n              `&response_type=${this.config.AUTH_TYPE}` +\n              `&redirect_uri=${encodeURIComponent(loc || '/login')}`\n\n    // Otherwise pop up the login modal\n    } else {\n      // Iframe login\n      if(this.config.ALLOW_IFRAME_LOGIN){\n        this.messenger.broadcast('auth:requireLogin')\n\n      // Redirect login\n      } else {\n        window.location.href = this.config.LOGIN_URL\n                        || `/login?redirect_url=${encodeURIComponent(loc)}`\n      }\n    }\n  };\n\n  /**\n   * Performs background logout and requests jwt revokation\n   */\n  async logout(): Promise<void> {\n    try {\n      await getJson(`${this.config.APP_BASE_URL}/revoke`, this.getJWT())\n    } catch(err){\n      console.log(`Error logging out: ${err}`)\n    }\n    if(this.config.LOGOUT_URL) window.location.href = this.config.LOGOUT_URL\n    if(this.config.FORCE_LOGIN) this.forceLogin();\n  }\n\n  /**\n   * Optional force redirect for non-public services\n   */\n  forceLogin() {\n    this.login();\n  };\n\n  /**\n   * Get protected user profile\n   */\n  async getOauthProfile(): Promise<UserProfile> {\n    const JWT = this.getJWT();\n\n    return JWT ?\n      await getJson(`${this.config.IDP_BASE_URL}/api/profile`, JWT) :\n      null;\n  };\n\n  /**\n   * Get User object from the JWT.\n   *\n   * If no JWT is provided it will be looked for at the normal JWT\n   * locations (localStorage or URL queryString).\n   *\n   * @param [jwt] - the JWT to extract user from.\n   */\n  getUserFromJWT(jwt: string): GeoPlatformUser {\n    const user = this.parseJwt(jwt)\n    return user ?\n            new GeoPlatformUser(Object.assign({}, user, { id: user.sub })) :\n            null;\n  }\n\n  /**\n   * If the callback parameter is specified, this method\n   * will return undefined. Otherwise, it returns the user (or null).\n   *\n   * Side Effects:\n   *  - Will redirect users if no valid JWT was found\n   *\n   * @param callback optional function to invoke with the user\n   * @return object representing current user\n   */\n  getUserSync(): GeoPlatformUser {\n    const jwt = this.getJWT();\n    // We allow front end to get user data if grant type and expired\n    // because they will recieve a new token automatically when\n    // making a call to the client(application)\n    return this.isImplicitJWT(jwt) && this.isExpired(jwt) ?\n            null :\n            this.getUserFromJWT(jwt);\n  }\n\n  /**\n   * Promise version of get user.\n   *\n   * Below is a table of how this function handels this method with\n   * differnt configurations.\n   *  - FORCE_LOGIN : Horizontal\n   *  - ALLOW_IFRAME_LOGIN : Vertical\n   *\n   *\n   * getUser  | T | F (FORCE_LOGIN)\n   * -----------------------------\n   * T        | 1 | 2\n   * F        | 3 | 4\n   * (ALLOW_IFRAME_LOGIN)\n   *\n   * Cases:\n   * 1. Delay resolve function till user is logged in\n   * 2. Return null (if user not authorized)\n   * 3. Force the redirect\n   * 4. Return null (if user not authorized)\n   *\n   * NOTE:\n   * Case 1 above will cause this method's promise to be a long stall\n   * until the user completes the login process. This should allow the\n   * app to forgo a reload is it should have waited till the entire\n   * time till the user was successfully logged in.\n   *\n   * @method getUser\n   *\n   * @returns User - the authenticated user resolved via Promise\n   */\n  async getUser(): Promise<GeoPlatformUser> {\n    // For basic testing\n    // this.messenger.broadcast('userAuthenticated', { name: 'username'})\n\n    // return new Promise<GeoPlatformUser>((resolve, reject) => {\n    const user = await this.check();\n    if(user) return user\n\n    // Case 1 - ALLOW_IFRAME_LOGIN: true | FORCE_LOGIN: true\n    if(this.config.ALLOW_IFRAME_LOGIN && this.config.FORCE_LOGIN){\n      // Resolve with user once they have logged in\n      this.messenger.on('userAuthenticated', (event: Event, user: GeoPlatformUser) => {\n        return user\n      })\n    }\n    // Case 2 - ALLOW_IFRAME_LOGIN: true | FORCE_LOGIN: false\n    if(this.config.ALLOW_IFRAME_LOGIN && !this.config.FORCE_LOGIN){\n      return null\n    }\n    // Case 3 - ALLOW_IFRAME_LOGIN: false | FORCE_LOGIN: true\n    if(!this.config.ALLOW_IFRAME_LOGIN && this.config.FORCE_LOGIN){\n      return null\n    }\n    // Case 4 - ALLOW_IFRAME_LOGIN: false | FORCE_LOGIN: false\n    if(!this.config.ALLOW_IFRAME_LOGIN && !this.config.FORCE_LOGIN){\n      return null // or reject?\n    }\n  };\n\n  /**\n   * Check function being used by some front end apps already.\n   * (wrapper for getUser)\n   *\n   * @method check\n   * @returns User or null\n   */\n  async check(): Promise<GeoPlatformUser>{\n    const jwt = this.getJWT();\n\n    // If no local JWT\n    if(!jwt) {\n      const freshJwt = await this.checkWithClient();\n\n      return jwt && jwt.length ?\n              this.getUserFromJWT(freshJwt) :\n              null;\n    }\n    if(!this.isImplicitJWT(jwt)){ // Grant token\n      return this.isExpired(jwt) ?\n              await this.checkWithClient() // Check with server\n                        .then(jwt => jwt && this.getUserFromJWT(jwt)) :\n              this.getUserFromJWT(jwt);\n\n    } else { // Implicit JWT\n      return this.isExpired(jwt) ?\n              Promise.reject(null) :\n              this.getUserFromJWT(jwt);\n    }\n  }\n\n  /**\n   * Makes a call to a service hosting node-gpoauth to allow for a\n   * token refresh on an expired token, or a token that has been\n   * invalidated to be revoked.\n   *\n   * Note: Client as in hosting application:\n   *    https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2\n   *\n   * @method checkWithClient\n   * @param jwt - encoded accessToken/JWT\n   *\n   * @return Promise<jwt>\n   */\n  async checkWithClient(): Promise<any> {\n    return this.config.AUTH_TYPE === 'token' ?\n                null :\n                axios(`${this.config.APP_BASE_URL}/checktoken`)\n                          .then(() => this.getJWTfromLocalStorage())\n  }\n\n  //=====================================================\n\n  /**\n   * Extract token from current URL\n   *\n   * @method getJWTFromUrl\n   *\n   * @return JWT Token (raw string)\n   */\n  getJWTFromUrl(): string {\n    const queryString = (window && window.location && window.location.hash) ?\n                          window.location.hash :\n                          window.location.toString();\n    const res = queryString.match(/access_token=([^\\&]*)/);\n    return res && res[1];\n  };\n\n  /**\n   * Is RPM library loaded already?\n   */\n  RPMLoaded():  boolean {\n   return typeof window.RPMService != 'undefined'\n  }\n\n  /**\n   * Get an associated array of cookies.\n   */\n  private getCookieObject(): StringObj  {\n    return document.cookie.split(';')\n                          .map(c => c.trim().split('='))\n                          .reduce((acc: StringObj, pair) => {\n                            acc[pair[0]] = pair[1]\n                            return acc\n                          }, {})\n  }\n\n  /**\n   * Extract and decode from cookie\n   *\n   * @param key\n   */\n  private getFromCookie(key: string) {\n    const raw = this.getCookieObject()[key]\n    try{\n      return raw ?\n              atob(decodeURIComponent(raw)) :\n              undefined;\n    } catch (e){ // Catch bad encoding or formally not encoded\n      return undefined;\n    }\n  };\n\n  /**\n   * Load the JWT stored in local storage.\n   *\n   * @method getJWTfromLocalStorage\n   *\n   * @return JWT Token\n   */\n  getJWTfromLocalStorage(): string {\n    return this.getFromCookie(ACCESS_TOKEN_COOKIE)\n  };\n\n  /**\n   * Attempt and pull JWT from the following locations (in order):\n   *  - URL query parameter 'access_token' (returned from IDP)\n   *  - Browser local storage (saved from previous request)\n   *\n   * @method getJWT\n   *\n   * @return JWT Token\n   */\n  getJWT(): string {\n    const jwt = this.getJWTFromUrl() || this.getJWTfromLocalStorage()\n    // Only deny implicit tokens that have expired\n    if(!jwt || (jwt && this.isImplicitJWT(jwt) && this.isExpired(jwt))) {\n      return null;\n    } else {\n      return jwt;\n    }\n  };\n\n  /**\n   * Is a token expired.\n   *\n   * @method isExpired\n   * @param jwt - A JWT\n   *\n   * @return Boolean\n   */\n  isExpired(jwt: string): boolean {\n    const parsedJWT = this.parseJwt(jwt)\n    if(parsedJWT){\n      const now = (new Date()).getTime() / 1000;\n      return now > parsedJWT.exp;\n    }\n    return true\n  };\n\n  /**\n   * Is the JWT an implicit JWT?\n   * @param jwt\n   */\n  isImplicitJWT(jwt: string): boolean {\n    const parsedJWT = this.parseJwt(jwt)\n    return parsedJWT && parsedJWT.implicit;\n  }\n\n  /**\n   * Unsafe (signature not checked) unpacking of JWT.\n   *\n   * @param token - Access Token (JWT)\n   * @return the parsed payload in the JWT\n   */\n  parseJwt(token: string): JWT {\n    var parsed;\n    if (token) {\n      try {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace('-', '+').replace('_', '/');\n        parsed = JSON.parse(atob(base64));\n      } catch(e) { /* Don't throw parse error */ }\n    }\n    return parsed;\n  };\n\n  /**\n   * Simple front end validion to verify JWT is complete and not\n   * expired.\n   *\n   * Note:\n   *  Signature validation is the only truly save method. This is done\n   *  automatically in the node-gpoauth module.\n   */\n  validateJwt(token: string): boolean {\n    var parsed = this.parseJwt(token);\n    var valid = (parsed && parsed.exp && parsed.exp * 1000 > Date.now()) ? true : false;\n    return valid;\n  };\n}\n\n\nexport const DefaultAuthConf: AuthConfig = {\n  AUTH_TYPE: 'grant',\n  APP_BASE_URL: '', // absolute path // use . for relative path\n  ALLOW_IFRAME_LOGIN: true,\n  FORCE_LOGIN: false,\n  ALLOW_DEV_EDITS: false\n}\n","/**\n * These are the common objects and types that will be accessible to other\n * dirivitive code (framework code).\n */\n// Expose internal types\nexport * from './auth'\nexport * from './authTypes'\nexport * from './GeoPlatformUser'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AuthConfig as Éµa,JWT as Éµc,Messenger as Éµb} from './authTypes';"],"names":[],"mappings":"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"}